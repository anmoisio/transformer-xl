
Currently Loaded Modules:
  1) anaconda3/2019.11-gpu

 

/share/apps/anaconda/2019.11-gpu/lib/python3.6/site-packages/torch/serialization.py:453: SourceChangeWarning: source code of class 'mem_transformer.MemTransformerLM' has changed. you can retrieve the original source code by accessing the object's source attribute or set `torch.nn.Module.dump_patches = True` and use the patch tool to revert the changes.
  warnings.warn(msg, SourceChangeWarning)
Loading cached dataset...
Traceback (most recent call last):
  File "rescore.py", line 115, in <module>
    model = torch.load(f)
  File "/share/apps/anaconda/2019.11-gpu/lib/python3.6/site-packages/torch/serialization.py", line 386, in load
    return _load(f, map_location, pickle_module, **pickle_load_args)
  File "/share/apps/anaconda/2019.11-gpu/lib/python3.6/site-packages/torch/serialization.py", line 573, in _load
    result = unpickler.load()
  File "/share/apps/anaconda/2019.11-gpu/lib/python3.6/site-packages/torch/serialization.py", line 536, in persistent_load
    deserialized_objects[root_key] = restore_location(obj, location)
  File "/share/apps/anaconda/2019.11-gpu/lib/python3.6/site-packages/torch/serialization.py", line 119, in default_restore_location
    result = fn(storage, location)
  File "/share/apps/anaconda/2019.11-gpu/lib/python3.6/site-packages/torch/serialization.py", line 95, in _cuda_deserialize
    device = validate_cuda_device(location)
  File "/share/apps/anaconda/2019.11-gpu/lib/python3.6/site-packages/torch/serialization.py", line 79, in validate_cuda_device
    raise RuntimeError('Attempting to deserialize object on a CUDA '
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
